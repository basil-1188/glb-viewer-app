{"ast":null,"code":"var _jsxFileName = \"D:\\\\glb-viewer-app\\\\frontend\\\\src\\\\components\\\\ModelViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, useGLTF } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GLBModel({\n  modelId\n}) {\n  _s();\n  const {\n    scene\n  } = useGLTF(`http://localhost:5000/api/models/${modelId}`);\n  const modelRef = useRef();\n  const [scale, setScale] = useState(1);\n  const [position, setPosition] = useState([0, 0, 0]);\n  useEffect(() => {\n    const box = new THREE.Box3().setFromObject(scene);\n    const size = new THREE.Vector3();\n    const center = new THREE.Vector3();\n    box.getSize(size);\n    box.getCenter(center);\n    scene.position.sub(center);\n    const maxDim = Math.max(size.x, size.y, size.z);\n    const desiredSize = 2;\n    const newScale = desiredSize / maxDim;\n    setScale(newScale);\n    setPosition([-center.x, -center.y, -center.z]);\n  }, [scene]);\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: scene,\n    scale: scale,\n    position: position,\n    ref: modelRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n_s(GLBModel, \"IT6NvM50E4OTBeIZ82AxQt9olC0=\", false, function () {\n  return [useGLTF];\n});\n_c = GLBModel;\nfunction ModelViewer({\n  modelId\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full fixed inset-0 z-0\",\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      camera: {\n        position: [0, 0, 5],\n        fov: 60\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n        position: [10, 10, 5],\n        intensity: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GLBModel, {\n        modelId: modelId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        enablePan: true,\n        enableZoom: true,\n        enableRotate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ModelViewer;\nexport default ModelViewer;\nvar _c, _c2;\n$RefreshReg$(_c, \"GLBModel\");\n$RefreshReg$(_c2, \"ModelViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Canvas","OrbitControls","useGLTF","THREE","jsxDEV","_jsxDEV","GLBModel","modelId","_s","scene","modelRef","scale","setScale","position","setPosition","box","Box3","setFromObject","size","Vector3","center","getSize","getCenter","sub","maxDim","Math","max","x","y","z","desiredSize","newScale","object","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","ModelViewer","className","children","camera","fov","intensity","enablePan","enableZoom","enableRotate","_c2","$RefreshReg$"],"sources":["D:/glb-viewer-app/frontend/src/components/ModelViewer.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { OrbitControls, useGLTF } from '@react-three/drei';\r\nimport * as THREE from 'three';\r\n\r\nfunction GLBModel({ modelId }) {\r\n  const { scene } = useGLTF(`http://localhost:5000/api/models/${modelId}`);\r\n  const modelRef = useRef();\r\n  const [scale, setScale] = useState(1);\r\n  const [position, setPosition] = useState([0, 0, 0]);\r\n\r\n  useEffect(() => {\r\n    const box = new THREE.Box3().setFromObject(scene);\r\n    const size = new THREE.Vector3();\r\n    const center = new THREE.Vector3();\r\n    box.getSize(size);\r\n    box.getCenter(center);\r\n    scene.position.sub(center);\r\n    const maxDim = Math.max(size.x, size.y, size.z);\r\n    const desiredSize = 2;\r\n    const newScale = desiredSize / maxDim;\r\n    setScale(newScale);\r\n    setPosition([-center.x, -center.y, -center.z]);\r\n  }, [scene]);\r\n\r\n  return <primitive object={scene} scale={scale} position={position} ref={modelRef} />;\r\n}\r\n\r\nfunction ModelViewer({ modelId }) {\r\n  return (\r\n    <div className=\"w-full h-full fixed inset-0 z-0\">\r\n      <Canvas camera={{ position: [0, 0, 5], fov: 60 }}>\r\n        <ambientLight intensity={0.6} />\r\n        <directionalLight position={[10, 10, 5]} intensity={1} />\r\n        <GLBModel modelId={modelId} />\r\n        <OrbitControls enablePan enableZoom enableRotate />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModelViewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}