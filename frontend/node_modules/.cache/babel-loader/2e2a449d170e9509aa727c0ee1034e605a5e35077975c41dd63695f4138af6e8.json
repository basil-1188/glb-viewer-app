{"ast":null,"code":"var _jsxFileName = \"D:\\\\glb-viewer-app\\\\frontend\\\\src\\\\components\\\\ModelViewer.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Canvas, useThree } from '@react-three/fiber';\nimport { OrbitControls, useGLTF, Bounds, useBounds } from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AutoCenteredModel({\n  scene\n}) {\n  _s();\n  const {\n    camera,\n    size\n  } = useThree();\n  const bounds = useBounds();\n  const groupRef = useRef();\n  useEffect(() => {\n    // Calculate the bounding box of the scene\n    scene.updateMatrixWorld();\n    const box = new THREE.Box3().setFromObject(scene);\n    const center = new THREE.Vector3();\n    box.getCenter(center);\n    const size = box.getSize(new THREE.Vector3()).length();\n    const maxDim = Math.max(box.max.x, box.max.y, box.max.z);\n    const minDim = Math.min(box.min.x, box.min.y, box.min.z);\n\n    // Calculate ideal camera position\n    const cameraDistance = Math.min(maxDim * 1.5, 10);\n    camera.position.set(0, 0, cameraDistance);\n    camera.near = 0.1;\n    camera.far = Math.max(1000, maxDim * 10);\n    camera.lookAt(0, 0, 0);\n    camera.updateProjectionMatrix();\n\n    // Center the model\n    scene.position.set(-center.x, -center.y, -center.z);\n\n    // Fit the view to the model\n    setTimeout(() => bounds.refresh().fit(), 100);\n  }, [scene, camera, bounds]);\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: groupRef,\n    children: /*#__PURE__*/_jsxDEV(\"primitive\", {\n      object: scene\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(AutoCenteredModel, \"Fi12AJbf8ld57jq6Fry1HeOUyiM=\", false, function () {\n  return [useThree, useBounds];\n});\n_c = AutoCenteredModel;\nfunction ModelViewer({\n  modelId\n}) {\n  _s2();\n  const {\n    scene\n  } = useGLTF(`http://localhost:5000/api/models/${modelId}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      camera: {\n        fov: 45\n      },\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Bounds, {\n        fit: true,\n        margin: 1.2,\n        damping: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          intensity: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n          position: [10, 10, 5],\n          intensity: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoCenteredModel, {\n          scene: scene\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n          makeDefault: true,\n          enablePan: true,\n          enableZoom: true,\n          minDistance: 0.5,\n          maxDistance: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s2(ModelViewer, \"o+hqw2nGnmzAsiWsKcbG4W2mWg4=\", false, function () {\n  return [useGLTF];\n});\n_c2 = ModelViewer;\nexport default ModelViewer;\nvar _c, _c2;\n$RefreshReg$(_c, \"AutoCenteredModel\");\n$RefreshReg$(_c2, \"ModelViewer\");","map":{"version":3,"names":["React","useEffect","useRef","Canvas","useThree","OrbitControls","useGLTF","Bounds","useBounds","jsxDEV","_jsxDEV","AutoCenteredModel","scene","_s","camera","size","bounds","groupRef","updateMatrixWorld","box","THREE","Box3","setFromObject","center","Vector3","getCenter","getSize","length","maxDim","Math","max","x","y","z","minDim","min","cameraDistance","position","set","near","far","lookAt","updateProjectionMatrix","setTimeout","refresh","fit","ref","children","object","fileName","_jsxFileName","lineNumber","columnNumber","_c","ModelViewer","modelId","_s2","style","width","height","overflow","fov","margin","damping","intensity","makeDefault","enablePan","enableZoom","minDistance","maxDistance","_c2","$RefreshReg$"],"sources":["D:/glb-viewer-app/frontend/src/components/ModelViewer.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Canvas, useThree } from '@react-three/fiber';\r\nimport { OrbitControls, useGLTF, Bounds, useBounds } from '@react-three/drei';\r\n\r\nfunction AutoCenteredModel({ scene }) {\r\n  const { camera, size } = useThree();\r\n  const bounds = useBounds();\r\n  const groupRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Calculate the bounding box of the scene\r\n    scene.updateMatrixWorld();\r\n    const box = new THREE.Box3().setFromObject(scene);\r\n    const center = new THREE.Vector3();\r\n    box.getCenter(center);\r\n    const size = box.getSize(new THREE.Vector3()).length();\r\n    const maxDim = Math.max(box.max.x, box.max.y, box.max.z);\r\n    const minDim = Math.min(box.min.x, box.min.y, box.min.z);\r\n    \r\n    // Calculate ideal camera position\r\n    const cameraDistance = Math.min(maxDim * 1.5, 10);\r\n    camera.position.set(0, 0, cameraDistance);\r\n    camera.near = 0.1;\r\n    camera.far = Math.max(1000, maxDim * 10);\r\n    camera.lookAt(0, 0, 0);\r\n    camera.updateProjectionMatrix();\r\n\r\n    // Center the model\r\n    scene.position.set(-center.x, -center.y, -center.z);\r\n\r\n    // Fit the view to the model\r\n    setTimeout(() => bounds.refresh().fit(), 100);\r\n  }, [scene, camera, bounds]);\r\n\r\n  return (\r\n    <group ref={groupRef}>\r\n      <primitive object={scene} />\r\n    </group>\r\n  );\r\n}\r\n\r\nfunction ModelViewer({ modelId }) {\r\n  const { scene } = useGLTF(`http://localhost:5000/api/models/${modelId}`);\r\n  \r\n  return (\r\n    <div style={{ width: '100vw', height: '100vh', overflow: 'hidden' }}>\r\n      <Canvas\r\n        camera={{ fov: 45 }}\r\n        style={{ width: '100%', height: '100%' }}\r\n      >\r\n        <Bounds fit margin={1.2} damping={3}>\r\n          <ambientLight intensity={0.5} />\r\n          <directionalLight position={[10, 10, 5]} intensity={1} />\r\n          <AutoCenteredModel scene={scene} />\r\n          <OrbitControls \r\n            makeDefault\r\n            enablePan={true}\r\n            enableZoom={true}\r\n            minDistance={0.5}\r\n            maxDistance={20}\r\n          />\r\n        </Bounds>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModelViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}